c
el.attribute('content').value
el.attribute('name')
el.attribute
el.attribute(:name)
el.methods
el.name
el
el = css_select('meta[name="description"]')
c
@meta_tags[:description]
c
@article.description
assert_select 'description'
assert_select 'title'
assert_selector 'title'
response
response.head
response.headers
response.methods
head
header
c
admin_signed_in?
c
Article.last
c
Article.last
c
Article.all
Article.first
Article.last
c
@response.status
c
@response.body
@response.status_message
@response.message
clear
@response.body
@response
self.method(:post).source_location
self.method(:post).parameters
self.method(:post).owner
self.post
self
this
::post
post.owner
p post
post.inspect
post.source_location
post.class
post.methods
result
c
        }
          } 
            slug: @article.slug
            description: @article.description,
            category_names: 'stuff A, stuff B',
            author_name: @article.author,
            title: @article.title,
            text: @article.text, 
          article: { 
post articles_url, params: { 
get new_article_url
articles_url
@article
post
c
config.force_ssl
config.methods
config.hosts
config.host
config
HostAuthorization
get "http://www.example:3000/blog/new"
new_article_url
get new_article_url
@request.url
@request.host_with_port
@request.host
q
@request
c
ActionDispatch::Integration::Session.DEFAULT_HOST
ActionDispatch::Integration::Session[:DEFAULT_HOST]
ActionDispatch::Integration::Session
DEFAULT_HOST
c
@request.host
c
new_article_url
get "http://localhost:3000/blog/new"
new_article_url
c
new_article_url
get "http://localhost:3000/blog/new"
@request.host
host
Capybara.default_host
@request.host
@request
get "http://localhost:3000/blog/new"
get "http://localhost:3000/blog/new
new_article_url
get new_article_url
new_article_url
get.class
@routes.named_routes
@routes
c
Engine.routes.url_helpers.methods
Engine.routes.url_helpers
c
q
Engine.routes.url_helpers
Engine.routes
@routes.pretty_inspect
@routes
@routes.methods
@routes.inspect
@routes.to_s
@routes
c
article_url(@article.slug)
get article_url(@article.slug)
c
@article
c
get articles_url
get 'http::/localhost:3000/blog
get 'localhost::3000/blog
get articles_url
c
articles_url
c
get articles_url
c
get articles_url
c
@article
c
self.categories << category
c
self.categories << category
category
c
self.categories = [category]
c
self.categories = [category]
self.categories = category
self.category = category
self
category
c
ex.backtrace
ex.to_s
ex.methods
ex
n
c
self.categories << Category.find_or_create_by(name: "programming")
c
self
c
self.categories
Category.find_or_create_by(name: "Programming")
category_names
categories
quit
config
Rails.Config
Rails::Config
Rails::Congih
Rails
continue
Article.count
continue
Article.count
delete article_url(@article)
continue
@article.author
@article
continue
quit
Article.first.author
Article.first.user
Article.first.author
Article.first
BlogBoi.author_class
quit
delete article_url(@article)
article_url(@article)
article_url
BlogBoi::Article
Article.all
Article
User.first
User
@article.author
@article
